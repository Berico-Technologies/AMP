<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    <!-- FOR SPRING SECURITY 3.0.x
    <sec:http entry-point-ref="spnegoEntryPoint">
        <sec:intercept-url pattern="/anubis/manage/**" access="ROLE_ADMIN" />
        <sec:intercept-url pattern="/anubis/rabbitmq/**" access="IS_AUTHENTICATED_FULLY" />
        <sec:intercept-url pattern="/anubis/**" access="ROLE_USER" />
        <sec:custom-filter ref="spnegoAuthenticationProcessingFilter" position="BASIC_AUTH_FILTER" />
    </sec:http>
    -->

    <sec:http use-expressions="true">
        <sec:http-basic/>
        <sec:intercept-url pattern="/anubis/manage/**" access="hasRole('ROLE_DOMAIN ADMINS')" />
        <sec:intercept-url pattern="/anubis/rabbitmq/**" access="permitAll" />
        <sec:intercept-url pattern="/anubis/**" access="hasRole('ROLE_DOMAIN USERS')" />
    </sec:http>

    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="adAuthenticationProvider" />
    </sec:authentication-manager>

    <bean id="adAuthenticationProvider"
          class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
        <constructor-arg value="johnruiz.com" />
        <constructor-arg value="ldap://dc01.johnruiz.com/" />
    </bean>


    <sec:ldap-server id="johnruizLdapServer"
                     url="ldap://dc01.johnruiz.com:389/dc=johnruiz,dc=com"
                     manager-dn="cn=LDAP Bind Account,cn=Users,dc=johnruiz,dc=com"
                     manager-password="<password here>" />
    <!--
        <sec:ldap-user-service id="ldapUserService"
                               server-ref="johnruizLdapServer"
                               user-search-filter="(|(sAMAccountName={0})(userPrincipalName={0}))"
                               group-search-base="cn=Users,dc=johnruiz,dc=com"
                               group-role-attribute="memberOf"
                               user-details-class="person" />
        -->

    <bean id="filterBasedLdapUserSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
        <constructor-arg value="cn=Users" />
        <constructor-arg value="(|(sAMAccountName={0})(userPrincipalName={0}))" />
        <constructor-arg ref="johnruizLdapServer" />
        <property name="searchSubtree" value="true" />
        <property name="derefLinkFlag" value="true" />
    </bean>

    <bean id="authoritiesPopulator" class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
        <constructor-arg ref="johnruizLdapServer" />
        <constructor-arg value="cn=Users" />
        <!-- <property name="groupSearchFilter" value="(member:1.2.840.113556.1.4.1941:=({0}))" /> -->
        <property name="searchSubtree" value="true" />
    </bean>

    <bean id="ldapUserDetailsService" class="org.springframework.security.ldap.userdetails.LdapUserDetailsService">
        <constructor-arg ref="filterBasedLdapUserSearch" />
        <constructor-arg ref="authoritiesPopulator"/>
    </bean>

    <bean id="dummyRabbitAccessManager" class="amp.anubis.resources.DummyRabbitAccessManager">
        <constructor-arg ref="adAuthenticationProvider" />
    </bean>

    <bean id="rabbitAuthorizationResource" class="amp.anubis.resources.RabbitAuthorizationResource">
        <constructor-arg ref="ldapUserDetailsService" />
        <constructor-arg ref="dummyRabbitAccessManager" />
    </bean>

</beans>
