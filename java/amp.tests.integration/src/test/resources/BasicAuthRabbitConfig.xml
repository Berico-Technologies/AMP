<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!-- The following components are for our Event Bus, which uses our Envelope Bus -->
    <bean id="eventBus" class="amp.eventing.DefaultEventBus"
          destroy-method="dispose">
          <constructor-arg ref="envelopeBus" />
          <constructor-arg >
		    <util:list value-type="amp.eventing.IEventProcessor">
		        <ref bean="serializationProcessor" />
		    </util:list>
          </constructor-arg>
          <constructor-arg >
		    <util:list value-type="amp.eventing.IEventProcessor">
		        <ref bean="serializationProcessor" />
		        <ref bean="outboundHeadersProcessor" />
		    </util:list>
          </constructor-arg>
    </bean>

    <bean id="rpcEventBus" class="amp.eventing.DefaultRpcBus"
          destroy-method="dispose">
          <constructor-arg ref="envelopeBus" />
          <constructor-arg >
		    <util:list value-type="amp.eventing.IEventProcessor">
		        <ref bean="rpcFilter" />
		        <ref bean="serializationProcessor" />
		    </util:list>
          </constructor-arg>
          <constructor-arg >
		    <util:list value-type="amp.eventing.IEventProcessor">
		        <ref bean="serializationProcessor" />
		        <ref bean="outboundHeadersProcessor" />
		        <ref bean="rpcFilter"/>
		    </util:list>
          </constructor-arg>
    </bean>

    <bean id="serializationProcessor" class="amp.eventing.serializers.JsonEventSerializer"
          c:serializer-ref="serializer" />

    <bean id="serializer" class="amp.utility.serialization.GsonSerializer" />

    <bean id="outboundHeadersProcessor" class="amp.eventing.OutboundHeadersProcessor"
          c:userInfoRepository-ref="userInfoRepository"  />

    <util:map id="userMapping" key-type="java.lang.String" value-type="java.lang.String" />

    <bean id="userInfoRepository" class="amp.bus.security.InMemoryUserInfoRepository"
          c:mapping-ref="userMapping" />

    <bean id="rpcFilter" class="amp.eventing.RpcFilter" />

    <!-- The follow components are for our Envelope Bus -->
    <bean id="envelopeBus" class="amp.bus.DefaultEnvelopeBus" destroy-method="dispose"
          c:transportProvider-ref="transportProvider" />

    <bean id="transportProvider" class="amp.rabbit.transport.RabbitTransportProvider"
          c:topologyService-ref="topologyService"
          c:channelFactory-ref="channelFactory"
          c:routingInfoCache-ref="routingInfoCache" />

    <bean id="channelFactory" class="amp.rabbit.BasicChannelFactory"
          c:username="devexample" c:password="devexample" />

    <!-- Default Username and Password for RabbitMQ

    <bean id="channelFactory" class="amp.bus.rabbit.BasicChannelFactory"
           c:username="guest" c:password="guest" />
     -->

    <!-- If you are using a local version of the Global Topology Service

    <bean id="httpClientProvider" class="amp.utility.http.BasicAuthHttpClientProvider"
          c:hostname="localhost" c:port="15677" c:username="app01" c:password="password" />

    <bean id="routingInfoRetriever" class="amp.topology.client.HttpRoutingInfoRetriever"
          c:httpClientProvider-ref="httpClientProvider" c:serializer-ref="routingSerializer"
          c:urlExpression="http://localhost:15677/service/topology/get-routing-info/%s" />
    -->

    <bean id="httpClientProvider" class="amp.utility.http.BasicAuthHttpClientProvider"
          c:hostname="devexample.com" c:port="15677" c:username="devexample" c:password="devexample" />

    <bean id="routingInfoRetriever" class="amp.topology.client.HttpRoutingInfoRetriever"
          c:httpClientProvider-ref="httpClientProvider" c:serializer-ref="routingSerializer"
          c:urlExpression="http://devexample.com:15677/service/topology/get-routing-info/%s" />

    <bean id="topologyService" class="amp.topology.client.GlobalTopologyService"
          c:routingInfoRetriever-ref="routingInfoRetriever"
          c:fallbackProvider-ref="fallbackProvider" />

    <bean id="routingSerializer" class="amp.topology.client.JsonRoutingInfoSerializer" />

    <!-- Configured to provide a route to the local Broker

    <bean id="fallbackProvider" class="amp.topology.client.DefaultApplicationExchangeProvider"
	      p:hostname="localhost" p:port="5672" />
    -->
    <bean id="fallbackProvider" class="amp.topology.client.DefaultApplicationExchangeProvider"
          p:hostname="devexample.com" p:port="5672" p:exchangeName="amp.fallback" />

    <bean id="routingInfoCache" class="amp.rabbit.transport.CommandableCache"
          c:commandReceiver-ref="commandReceiver"
          c:cacheExpiryInSeconds="600" />

    <bean id="commandReceiver" class="amp.commanding.DefaultCommandReceiver" >
        <constructor-arg ref="envelopeReceiver" />
        <constructor-arg >
		    <util:list value-type="amp.eventing.IEventProcessor">
		        <ref bean="JsonSerializationProcessor" />
		    </util:list>
        </constructor-arg>
    </bean>

    <bean id="envelopeReceiver" class="amp.rabbit.transport.RabbitEnvelopeReceiver"
          c:topologyService-ref="topologyService"
          c:channelFactory-ref="channelFactory" />

    <bean id="JsonSerializationProcessor" class="amp.commanding.JsonSerializationProcessor" />

</beans>
