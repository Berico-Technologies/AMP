<?xml version="1.0"?>
<configuration>
  <configSections>
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core"/>
      <section name="typeAliases" type="Spring.Context.Support.TypeAliasesSectionHandler, Spring.Core"/>
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core"/>
      <section name="parsers" type="Spring.Context.Support.NamespaceParsersSectionHandler, Spring.Core"/>
    </sectionGroup>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging"/>
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net">
        <!-- <arg key="configType" value="INLINE"/> -->
        <arg key="configType" value="INLINE"/>
      </factoryAdapter>
    </logging>
  </common>

  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="amp.examples.streaming.subscriber.txt"/>
      <appendToFile value="true"/>
      <rollingStyle value="Once"/>
      <maxSizeRollBackups value="25"/>
      <maximumFileSize value="2MB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <header value="[Header]
"/>
        <footer value="[Footer]
"/>
        <conversionPattern value="%-5level  |--|   %date{hh:mm:ss.fff tt} (%thread)   |--|   %logger{1}%newline  %message%newline%exception%newline%newline"/>
      </layout>
    </appender>
    <category name="Spring.Objects.Factory">
      <level value="TRACE"/>
    </category>
    <category name="Spring.Context.Support">
      <level value="TRACE"/>
    </category>
    <category name="Spring.Web.Support">
      <level value="INFO"/>
    </category>
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="RollingFileAppender"/>
    </root>
  </log4net>

  <spring>
    <context>
      <resource uri="config://spring/objects"/>
    </context>

    <objects xmlns="http://www.springframework.net" xmlns:db="http://www.springframework.net/database" xmlns:tx="http://www.springfamwork.net/tx">

      <!-- Event Bus Objects -->


      <!--<object id="RpcFilter" type="amp.eventing.RpcFilter, amp.eventing"/>-->

      <!--<object id="DigitalSignatureProcessor" type="amp.eventing.DigitalSignatureProcessor, amp.eventing">
        <constructor-arg name="certProvider" ref="amp.bus.security.ICertificateProvider"/>
      </object>-->


      <!--<object id="GZipCompressionProcessor" type="mil.capture.events.support.GZipCompressionProcessor, mil.capture.events.support" />-->
      <object id="amp.eventing.streaming.IStandardStreamingEventBus" type="amp.eventing.streaming.DefaultStreamingBus, amp.eventing">
        <constructor-arg name="envelopeBus" ref="cmf.bus.IEnvelopeBus" />
        <property name="inboundChain">
          <dictionary key-type="System.Int32" value-type="amp.eventing.IEventProcessor, amp.eventing">
            <!--<entry key="0" value-ref="RpcFilter"/>-->
            <!--<entry key="1" value-ref="GZipCompressionProcessor" />-->
            <!--<entry key="1" value-ref="DigitalSignatureProcessor"/>-->
            <entry key="0" value-ref="JsonEventSerializer"/>
          </dictionary>
        </property>
        <property name="outboundChain">
          <dictionary key-type="System.Int32" value-type="amp.eventing.IEventProcessor, amp.eventing">
            <entry key="0" value-ref="JsonEventSerializer"/>
            <entry key="1" value-ref="OutboundHeadersProcessor"/>
            <!--<entry key="2" value-ref="DigitalSignatureProcessor"/>-->
            <!--<entry key="2" value-ref="RpcFilter"/>-->
          </dictionary>
        </property>
      </object>

      <object id="JsonEventSerializer" type="amp.eventing.serializers.JsonEventSerializer, amp.eventing"/>

      <object id="OutboundHeadersProcessor" type="amp.eventing.OutboundHeadersProcessor, amp.eventing">
        <constructor-arg name="alternateSenderIdentity" value="ray.stantz@ghostbusters.com" />
      </object>

      <object id="cmf.bus.IEnvelopeBus" type="amp.bus.DefaultEnvelopeBus, amp.bus">
        <constructor-arg name="transportProvider" ref="amp.bus.ITransportProvider"/>
      </object>

      <object id="amp.bus.ITransportProvider" type="amp.bus.rabbit.RabbitTransportProvider, amp.bus.rabbit">
        <constructor-arg name="topologyService" ref="amp.bus.rabbit.topology.ITopologyService"/>
        <constructor-arg name="connFactory" ref="amp.bus.rabbit.IRabbitConnectionFactory"/>
      </object>

      <!-- 
      Use Certificate Connection factory when you have a secure Rabbit MQ Broker that 
      has been configured to work with SSL.
      -->
      <!--<object id="amp.bus.rabbit.IRabbitConnectionFactory" type="amp.bus.rabbit.CertificateConnectionFactory, amp.bus.rabbit">
        <constructor-arg name="certificateProvider" ref="amp.bus.security.ICertificateProvider"/>
      </object>-->

      <!-- Use the Basic Connection Factory for simple user name password authentication -->
      <object id="amp.bus.rabbit.IRabbitConnectionFactory" type="amp.bus.rabbit.BasicConnectionFactory">
        <constructor-arg name="username" value="guest" />
        <constructor-arg name="password" value="guest" />
      </object>

      <object id="amp.bus.rabbit.topology.ITopologyService" type="amp.bus.rabbit.topology.SimpleTopologyService, amp.bus.rabbit">
        <constructor-arg name="clientProfile" value=""/>
        <constructor-arg name="name" value=""/>
        <constructor-arg name="hostname" value="192.168.1.4"/>
        <constructor-arg name="vhost" value=""/>
        <constructor-arg name="port" value="5672"/>
      </object>

    </objects>
  </spring>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>
</configuration>
