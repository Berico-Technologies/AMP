<?xml version="1.0"?>
<configuration>
  <configSections>
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core"/>
      <section name="typeAliases" type="Spring.Context.Support.TypeAliasesSectionHandler, Spring.Core"/>
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core"/>
      <section name="parsers" type="Spring.Context.Support.NamespaceParsersSectionHandler, Spring.Core"/>
    </sectionGroup>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging"/>
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
  </configSections>

  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net">
        <!-- <arg key="configType" value="INLINE"/> -->
        <arg key="configType" value="INLINE"/>
      </factoryAdapter>
    </logging>
  </common>

  <log4net>
    <appender name="RollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <file value="amp.examples.streaming.subscriber.txt"/>
      <appendToFile value="true"/>
      <rollingStyle value="Once"/>
      <maxSizeRollBackups value="25"/>
      <maximumFileSize value="2MB"/>
      <staticLogFileName value="true"/>
      <layout type="log4net.Layout.PatternLayout">
        <header value="[Header]
"/>
        <footer value="[Footer]
"/>
        <conversionPattern value="%-5level  |--|   %date{hh:mm:ss.fff tt} (%thread)   |--|   %logger{1}%newline  %message%newline%exception%newline%newline"/>
      </layout>
    </appender>
    <category name="Spring.Objects.Factory">
      <level value="TRACE"/>
    </category>
    <category name="Spring.Context.Support">
      <level value="TRACE"/>
    </category>
    <category name="Spring.Web.Support">
      <level value="INFO"/>
    </category>
    <root>
      <level value="DEBUG"/>
      <appender-ref ref="RollingFileAppender"/>
    </root>
  </log4net>

  <spring>
    <context>
      <resource uri="config://spring/objects"/>
    </context>

    <objects xmlns="http://www.springframework.net" xmlns:db="http://www.springframework.net/database" xmlns:tx="http://www.springfamwork.net/tx">

      <object id="amp.eventing.streaming.IStandardStreamingEventBus" type="amp.eventing.streaming.DefaultStreamingBus, amp.eventing">
        <constructor-arg name="envelopeBus" ref="IEnvelopeBus" />
        <constructor-arg name="inboundChain">
          <list element-type="amp.messaging.IMessageProcessor, amp.messaging">
            <ref object="JsonSerializationProcessor" />
          </list>
        </constructor-arg>
        <constructor-arg name="outboundChain">
          <list element-type="amp.messaging.IMessageProcessor, amp.messaging">
            <ref object="JsonSerializationProcessor" />
            <ref object="OutboundHeadersProcessor" />
            <ref object="StreamingHeadersProcessor" />
          </list>
        </constructor-arg>
      </object>

      <object id="JsonSerializationProcessor" type="amp.messaging.JsonSerializationProcessor, amp.messaging" />

      <object id="OutboundHeadersProcessor" type="amp.messaging.OutboundHeadersProcessor, amp.messaging">
        <constructor-arg name="alternateSenderIdentity" value="integration-test" />
      </object>

      <object id="StreamingHeadersProcessor" type="amp.eventing.streaming.StreamingHeadersProcessor, amp.eventing" />

      <object id="IEnvelopeBus" type="amp.bus.DefaultEnvelopeBus, amp.bus">
        <constructor-arg name="transportProvider" ref="ITransportProvider" />
      </object>

      <object id="ITransportProvider" type="amp.rabbit.transport.RabbitTransportProvider, amp.rabbit">
        <constructor-arg name="topologyService" ref="ITopologyService" />
        <constructor-arg name="connFactory" ref="IRabbitConnectionFactory" />
        <constructor-arg name="routingInfoCache" ref="IRoutingInfoCache" />
      </object>

      <object id="IRabbitConnectionFactory" type="amp.rabbit.TokenConnectionFactory, amp.rabbit">
        <constructor-arg name="anubisUri" value="https://anubis.openampere.com:15678/anubis/identity/authenticate" />
        <constructor-arg name="webRequestFactory" ref="IWebRequestFactory" />
        <constructor-arg name="serializer" ref="Token-IDeserializer" />
        <constructor-arg name="secureConnectionFactory" ref="Secuire-IRabbitConnectionFactory" />
      </object>

      <object id="IWebRequestFactory" type="amp.utility.http.CertifacateWebRequestFactory, amp.utility" >
        <constructor-arg name="certificateProvider" ref="ICertificateProvider" />
      </object>

      <!--NOTE: In a production environment, the amp.bus.security.WindowsCertificateStoreCertProvider
      certificate provider is a more secure choice.  But it is hard to test with.-->
      <object id="ICertificateProvider" type="amp.bus.security.FileBasedCertProvider, amp.bus.security" >
        <constructor-arg name="clientCertFilename" value="..\..\..\..\shared\test-certs\amp-test-at-openampere.com.pfx" />
        <constructor-arg name="clientCertPassword" value="1qaz@WSX3edc$RFV" />
      </object>

      <object id="Token-IDeserializer" type="amp.utility.serialization.Utf8JsonDeserializer&lt;amp.rabbit.TokenConnectionFactory+NamedToken&gt;, amp.utility" />

      <object id="Secuire-IRabbitConnectionFactory" type="amp.rabbit.CertificateConnectionFactory, amp.rabbit">
        <constructor-arg name="certificateProvider" ref="ICertificateProvider"/>
      </object>

      <object id="ITopologyService" type="amp.topology.client.GlobalTopologyService, amp.topology.client">
        <constructor-arg name="routingRetreiver" ref="IRoutingInfoRetreiver" />
        <constructor-arg name="fallbackProvider" ref="IFallbackRoutingInfoProvider" />
      </object>

      <object id="IRoutingInfoRetreiver" type="amp.topology.client.HttpRoutingInfoRetreiver">
        <constructor-arg name="webRequestFactory" ref="IWebRequestFactory" />
        <constructor-arg name="urlExpression" value="https://gts.openampere.com:15677/service/topology/get-routing-info/{0}" />
        <constructor-arg name="serializer" ref="Topo-IDeserializer" />
      </object>

      <object id="Topo-IDeserializer" type="amp.utility.serialization.Utf8JsonDeserializer&lt;amp.rabbit.topology.RoutingInfo&gt;, amp.utility" />

      <object id="IFallbackRoutingInfoProvider" type="amp.topology.client.DefaultApplicationExchangeProvider">
        <property name="hostName" value="rabbit.openampere.com" />
        <property name="port" value="5671" />
      </object>

      <object id="IRoutingInfoCache" type="amp.rabbit.transport.CommandableCache, amp.rabbit">
        <constructor-arg name="commandReceiver" ref="ICommandReceiver" />
        <constructor-arg name="cacheExpiryInSeconds" value="600" />
      </object>

      <object id="ICommandReceiver" type="amp.commanding.DefaultCommandReceiver, amp.commanding">
        <constructor-arg name="envelopeReceiver" ref="IEnvelopeReceiver" />
        <constructor-arg name="processingChain">
          <list element-type="amp.messaging.IMessageProcessor, amp.messaging">
            <ref object="JsonSerializationProcessor" />
          </list>
        </constructor-arg>
      </object>

      <object id="IEnvelopeReceiver" type="amp.rabbit.transport.RabbitEnvelopeReceiver, amp.rabbit">
        <constructor-arg name="topologyService" ref="ITopologyService" />
        <constructor-arg name="connFactory" ref="IRabbitConnectionFactory" />
      </object>

    </objects>
  </spring>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5"/>
  </startup>
</configuration>
